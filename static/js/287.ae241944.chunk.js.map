{"version":3,"file":"static/js/287.ae241944.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {Field, Form } from 'formik';\n\nexport const FormWrapper = styled.div`\n    text-align: center;\n    max-width: 450px;\n    min-width: 300px;\n    position: relative;\n    padding: 50px 40px 40px 40px;\n    border: 1px solid black;\n    border-radius: 5px;\n`;\n\nexport const Button = styled.button`\n    margin-left: auto;\n    margin-top: 5px;\n    padding: 0 15px;\n    width: 120px;\n    padding: 10px;\n    font-family: inherit;\n    font-weight: 400;\n    font-size: 14px;\n    color: black;\n    background-color: rgba(0, 0, 0, 0);\n    border: 1px solid rgb(139, 0, 0);\n    border-radius: 7px;\n    cursor: pointer;\n`;\n\nexport const Error = styled.p`\n    position: absolute;\n    top: 160px;\n    font-size: 12px;\n    color: red;\n`;\n\nexport const Label = styled.label`\n    position: absolute;\n    top: -20px;\n    left: 0;\n`;\n\nexport const InputWrapper = styled.div`\n    position: relative;\n`;\n\nexport const Input = styled(Field)`\n    width: 305px;\n    height: 25px;\n`;\n\nexport const FormWithStyle = styled(Form)`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 45px;\n    justify-content: space-between;\n`;\n\n\n","import { Formik } from 'formik';\nimport { useState } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { addContact } from 'redux/contacts/operations';\n\nimport { useAuth } from 'hooks/useAuth';\n\nimport { FormWrapper, Button, Error, Label, InputWrapper, Input, FormWithStyle } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const [error, setError] = useState('');\n\n    const { contacts } = useAuth();\n    const dispatch = useDispatch();\n\n    const handleInputChange = evt => {\n        switch (evt.currentTarget.name) {\n            case \"name\":\n                setName(evt.currentTarget.value);\n                break;\n            case \"number\":\n                setNumber(evt.currentTarget.value);\n                break;\n            default:\n                return;\n        }\n    }\n\n    const handleSubmit = evt => {\n          if (!name || !number) {\n            setError('Please fill out all contact information...');\n            return;\n          }\n            if (contacts.find(contact => contact.name === name))  {\n            setError('You have a contact with that name...');\n            return;\n            }\n        if (contacts.find(contact => contact.number === number))  {\n            setError('You have a contact with that phone...');\n            return;\n        }\n        dispatch(addContact(({name, number})));\n        resetForm();\n    }\n    const resetForm = () => {\n        setName('');\n        setNumber('');\n        setError('');\n    }\n\n    return (\n      <FormWrapper>\n        <Formik\n                initialValues={{ name: '', number: '' }}\n                onSubmit={handleSubmit}\n            >\n                <FormWithStyle autoComplete=\"off\">\n                    <InputWrapper>\n                        <Label htmlFor=\"name\"> Name </Label>\n                        <Input\n                            id=\"name\"\n                            name=\"name\"\n                            type=\"text\"\n                            pattern=\"^[a-zA-Zа-яА-Я0-9]+(([' -][a-zA-Zа-яА-Я0-9])?[a-zA-Zа-яА-Я0-9]*)*$\"\n                            value={name} onChange={handleInputChange} />\n                    </InputWrapper>\n                    \n                    <InputWrapper>\n                        <Label htmlFor=\"number\">Contact </Label>\n                        <Input\n                            id=\"number\"\n                            name=\"number\"\n                            type=\"tel\"\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                            value={number} onChange={handleInputChange} />\n                    </InputWrapper>\n                    <Button type=\"submit\" >Add contact</Button>\n                </FormWithStyle>\n            </Formik>\n            {error && <Error>{error}</Error>}\n        </FormWrapper> \n    )\n}\n\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n    padding: 20px 40px;\n    max-height: 450px;\n    overflow: scroll;\n    border: 1px solid black;\n    border-radius: 5px;\n`;\n\nexport const ListItem = styled.li`\n    display: flex;\n    justify-content: space-between;\n    padding-top: 10px;\n    align-items: center;  \n    border-bottom: 1px dotted;    \n\n`;\n\nexport const Button = styled.button`\n    height: 30px;\n    padding: 0 15px;\n    margin-left: 10px;\n    width: 50px;\n    padding: 5px;\n    font-family: inherit;\n    font-weight: 400;\n    font-size: 14px;\n    color: black;\n    background-color: rgba(0, 0, 0, 0);\n    border: 1px solid rgb(139, 0, 0);\n    border-radius: 7px;\n    cursor: pointer;\n    :hover{\n        background-color: rgb(139, 0, 0);\n        color: #ffffff;\n    }\n`;\n\nexport const ContactInfo = styled.div`\n    display: flex;\n    gap: 10px;\n    align-items: center;  \n`;\n","\nimport styled from \"styled-components\";\nimport {Field, Form } from 'formik';\n\nexport const Overlay = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(0, 0, 0, 0.8);\n`;\n\nexport const ModalContainer = styled.div`\n    position: relative;\n    padding: 40px;\n    width: 360px;\n    height: 210px;\n    background-color: #ffffff;\n    border: 1px solid rgb(139, 0, 0);\n    border-radius: 7px;\n`;\n\nexport const FormWithStyle = styled(Form)`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n    justify-content: space-between;\n`;\n\nexport const Input = styled(Field)`\n    width: 350px;\n    height: 20px;\n`;\n\nexport const Button = styled.button`\n    margin: 10px;\n    padding: 10px;\n    width: 160px;\n    font-family: inherit;\n    font-weight: 400;\n    font-size: 14px;\n    color: black;\n    background-color: rgba(0, 0, 0, 0);\n    border: 1px solid rgb(139, 0, 0);\n    border-radius: 7px;\n    cursor: pointer;\n    :hover{\n        background-color: rgb(139, 0, 0);\n        color: #ffffff;\n    }\n`;\n\nexport const Error = styled.p`\n    position: absolute;\n    top: 180px;\n    font-size: 12px;\n    color: red;\n`;\n","import { Formik} from 'formik';\nimport { useDispatch } from \"react-redux\";\nimport { useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { update } from 'redux/contacts/operations';\nimport { useAuth } from 'hooks/useAuth';\nimport { ModalContainer, Overlay, FormWithStyle, Input, Button, Error } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ id, closeModal }) => {\n    const { contacts } = useAuth();\n    const dispatch = useDispatch();\n    const [error, setError] = useState('');\n    \n    const handleSubmit = (evt) => {\n  \n    const name = evt.name;\n    const number = evt.number;\n    const contactsWithoutEdit = contacts.filter(contact => contact.id !== id)\n        if (contactsWithoutEdit.find(contact => contact.name === name)) {\n            setError('You have a contact with that name...');\n        return;\n    }\n        if (contactsWithoutEdit.find(contact => contact.number === number)) {\n            setError('You have a contact with that phone...');\n        return;\n    }\n\n    dispatch(\n        update(({ id, name, number }))\n        );\n        closeModal();\n    }\n\n    const getInitialValues = (idContact) => {\n        const contactUpdate = contacts.find(contact => contact.id === idContact);\n        return ({ name: contactUpdate.name, number: contactUpdate.number });\n    }\n\n    return createPortal (\n        <Overlay>\n            <ModalContainer>\n                <Formik\n                    initialValues={getInitialValues(id)}\n                    onSubmit={handleSubmit}>\n                    <FormWithStyle autoComplete=\"off\">\n                        <label htmlFor=\"name\"> Name</label>\n                        <Input\n                            id=\"name\"\n                            name=\"name\"\n                            type=\"text\"\n                            pattern=\"^[a-zA-Zа-яА-Я0-9]+(([' -][a-zA-Zа-яА-Я0-9])?[a-zA-Zа-яА-Я0-9]*)*$\" />\n                        \n                        <label htmlFor=\"number\">Contact </label>\n                        <Input\n                            id=\"number\"\n                            name=\"number\"\n                            type=\"tel\"\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\" />\n                        <div>\n                            <Button type=\"button\" onClick={() => closeModal()} >Cancel</Button>\n                            <Button type=\"submit\" >Update contact</Button>\n                        </div>\n                    </FormWithStyle>\n                </Formik>\n                {error && <Error>{error}</Error>}\n            </ModalContainer>\n        </Overlay>,\n        modalRoot,\n    )\n}","import { List, ListItem, Button, ContactInfo } from './ContactList.styled'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/contacts/operations\";\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { RxAvatar } from 'react-icons/rx';\nimport { AiOutlineDelete, AiOutlineEdit } from 'react-icons/ai';\nimport { useState } from 'react';\nimport { Modal } from 'components/Modal/Modal';\n\n\n\nexport const ContactList = () => {\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [idUpdateContact, setIdUpdateContact] = useState();\n\n    \n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n\n    const dispatch = useDispatch();\n\n    const handleDelete = (id) => {\n        dispatch(deleteContact(id));\n    };\n\n    const getVisibleContasts = () => {\n        const normalisedFilter = filter.toLowerCase();\n        if(contacts !== []){\n            const visebleContacts = contacts.filter(contact =>\n            contact.name.toLowerCase().includes(normalisedFilter));\n            return visebleContacts;\n        };\n    }\n\n    const listItems = getVisibleContasts();\n\n    //  For modal\n    const openModal = (id) => {\n        setModalIsOpen(true);\n        setIdUpdateContact(id)\n    }\n\n    const closeModal = () => {\n        setModalIsOpen(false);\n        setIdUpdateContact(\"\");\n    }\n\n    return (\n        <div>               \n            <List>\n                {listItems.length > 0 && (listItems.map((listItem) => (\n              \n                    <ListItem key={listItem.id}>\n                        <ContactInfo>\n                            <RxAvatar size={24}/>\n                            <span>{listItem.name}: {listItem.number}</span>\n                        </ContactInfo>\n                \n                        <div>\n                            <Button type='button' onClick={() => handleDelete(listItem.id)}><AiOutlineDelete size={18}/></Button>\n                            <Button type='button' onClick={() => openModal(listItem.id)}><AiOutlineEdit size={18}/></Button>\n                        </div>\n                        \n                    </ListItem>\n            )))}\n                </List>\n            {modalIsOpen && (<Modal id={idUpdateContact} closeModal={closeModal}></Modal>)}\n        </div>\n    )\n}\n\n\n","import styled from \"styled-components\";\n\nexport const Label = styled.label`\n    position: absolute;\n    top: 7px;\n    left: 7px;\n    color: rgb(92, 94, 92);\n    font-size: 14px;\n`;\nexport const Input = styled.input`\n    box-sizing: border-box;\n    width: 300px;\n    border: 1px solid rgb(139, 0, 0);\n    padding: 7px 27px;\n    border-radius: 5px;\n    outline: rgb(139, 0, 0);\n`;\n\nexport const FilterField = styled.div`\n    position: relative;\n`;\n\n\n","import { useDispatch } from \"react-redux\";\n\nimport { setStatusFilter } from \"redux/contacts/filterSlice.jsx\";\nimport { RiSearchLine } from 'react-icons/ri';\nimport { Label, Input, FilterField} from './Filter.styled';\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    \n    const changeFilter = (evt) => {\n        dispatch(setStatusFilter(evt.currentTarget.value));\n    }\n\n    return (\n        <FilterField>\n            <Label ><RiSearchLine size={18}/> </Label> \n            <Input type=\"text\" id=\"filter\" onChange={changeFilter} placeholder=\"Find contacts by name\"/>\n        </FilterField> \n        )\n    }\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\npadding: 20px;\n`;\n\nexport const FilterContainer = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\nposition: relative;\nborder-bottom: 2px dotted rgb(92, 94, 92);\npadding-bottom: 10px;\n`;\n\nexport const ContactsContainer = styled.div`\ndisplay: flex;\njustify-content: space-between;\n`;\n\nexport const ContactsListWrapper = styled.div`\nwidth: 50%;\n`;\n\nexport const AddContactWrapper = styled.div`\nwidth: 30%;\n`;\n\nexport const MainHeader = styled.h1`\nmargin: 0;  \ntext-transform: uppercase;\ncolor: rgb(139, 0, 0);\n`;\n\nexport const Image = styled.img`\ndisplay: block;\nmargin-left: auto;\nmargin-top: 20px;\n`;\n\n\n\n\n\n\n","import { ContactForm } from 'components/ContactForm/ContactForm.jsx'\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { FilterContainer, ContactsContainer, ContactsListWrapper, AddContactWrapper, MainHeader, Container, Image } from './Contacts.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const items = useSelector(selectContacts);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n    return (\n      <Container>\n        <FilterContainer>\n          <MainHeader>Phonebook</MainHeader>\n          <Filter />\n        </FilterContainer>\n        \n        <ContactsContainer>\n          <ContactsListWrapper>\n            <h2>Contacts</h2>\n            {items.length > 0 ? <ContactList /> : <p>Your contact list will be here</p>}\n          </ContactsListWrapper>\n          <AddContactWrapper>\n             <h2>Create new contact</h2>\n            <ContactForm />\n            <Image src='https://upload.wikimedia.org/wikipedia/commons/thumb/1/15/1896_telephone.jpg/222px-1896_telephone.jpg' alt='number'></Image>\n          </AddContactWrapper>\n         \n        </ContactsContainer>\n        </Container>\n    );\n}"],"names":["FormWrapper","styled","Button","Error","Label","InputWrapper","Input","Field","FormWithStyle","Form","ContactForm","useState","name","setName","number","setNumber","error","setError","contacts","useAuth","dispatch","useDispatch","handleInputChange","evt","currentTarget","value","resetForm","initialValues","onSubmit","find","contact","addContact","autoComplete","htmlFor","id","type","pattern","onChange","List","ListItem","ContactInfo","Overlay","ModalContainer","modalRoot","document","querySelector","Modal","closeModal","createPortal","idContact","contactUpdate","getInitialValues","contactsWithoutEdit","filter","update","onClick","ContactList","modalIsOpen","setModalIsOpen","idUpdateContact","setIdUpdateContact","useSelector","selectContacts","selectFilter","listItems","normalisedFilter","toLowerCase","includes","getVisibleContasts","length","map","listItem","size","deleteContact","FilterField","Filter","setStatusFilter","placeholder","Container","FilterContainer","ContactsContainer","ContactsListWrapper","AddContactWrapper","MainHeader","Image","Contacts","items","useEffect","fetchContacts","src","alt"],"sourceRoot":""}